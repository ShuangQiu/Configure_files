####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################M.py####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
#!/usr/bin/python


import os

Dir = "./"

File_seperator = "####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################"
Merge_file = open("shaokc.txt", "w")

Filelist = os.listdir(Dir)

for file in (Filelist):
  File = Dir + file
  if os.path.isfile(File):
    print file
    fp = open(File, "r")
    Merge_file.writelines(File_seperator + file + File_seperator + "\n")
    Contents = fp.readlines()
    Merge_file.writelines(Contents)
    fp.close

Merge_file.close
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################foreach_example.v####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
//Chapter2 foreach_example.sv
module foreach_example();
string words[2] = '{"hello","world"}
int prod[1:8][1:3];

initial begin
foreach (words [j])
	$display(j,words[j]);  //print each index and value
foreach(prod[k,m])
	prod[k][m] = k*m;	//initialize
end

endmodule
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################based_derived_example.sv####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
module derived2based;

class Packet;
	integer i = 1;
	function integer get();
		get = i;
	endfunction
endclass

class DerivedPacket extends Packet;
	integer i = 2;
	function integer get();
		get = -i;
	endfunction
endclass

initial begin
//	DerivedPacket ld,lp=new;
	static DerivedPacket ld,lp=new;
	integer j;
//	static packet	p = lp
	j = lp.i;
//	j = lp.get();
//	$cast(ld,p);
	end

endmodule
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################shaokc.txt####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################M.py~####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
#!/usr/bin/python


import os

Dir = "./"

File_seperator = "####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################"
Merge_file = open("shaokc.txt", "w")

Filelist = os.listdir(Dir)

for file in (Filelist):
  File = Dir + file
  if os.path.isfile(File):
    print file
    fp = open(File, "r")
    Merge_file.writelines(File_seperator + file + File_seperator + "\n")
    Contents = fp.readlines()
    Merge_file.writelines(Contents)
    fp.close

Merge_file.close
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################Readme.txt####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
systemverilog and functional veification!
Writer	WenFeng Zhong
Date	2010
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################forever_example.sv####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################foreach_example.sv####################ABCDEFGHIJKLMNOPQRSTUVWXYZ####################
//Chapter2 foreach_example.sv
module foreach_example();
string words[2] = '{"hello","world"};
//int prod[1:8][1:3];

initial begin
foreach (words [j])
	$display(j,words[j]);  //print each index and value
//foreach(prod[k,m])
//	prod[k][m] = k*m;	//initialize
end

endmodule
